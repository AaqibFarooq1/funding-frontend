// to be used in conjunction with the mark-up for a standard .govuk-table
// from the govuk design system: https://design-system.service.gov.uk/components/table/
.nlhf-table {

    &--responsive-columns {

        .nlhf-table__head,
        .nlhf-table__body,
        .nlhf-table__foot {
          width: 100%;
        }
        
        .nlhf-table__row {
          display: flex;
          flex-direction: column;
          justify-content: flex-start;
          flex-wrap: nowrap;
          width: 100%;
          @media (min-width: 768px) {
            flex-direction: row;
          }
        }
        
        .nlhf-table__header, .nlhf-table__cell {
            flex: 1 0 auto;
            &-data__item {
                &:not(:last-child) {
                    margin-bottom: 0.75em;
                }
            }
        }  
        
        @include govuk-media-query($until: desktop) {
            .nlhf-table__body {
                .nlhf-table__row {
                    border: 2px solid #000;
                    margin-bottom: 1.25em;
                }
                .nlhf-table__header, .nlhf-table__cell {
                    padding: 1em 1em;
                    display: flex;
                }  
                .nlhf-table__cell {
                    &-stacked-until-desktop{
                        display: block;
                        .nlhf-table__col-header,
                        .nlhf-table__cell-data {
                            padding: 0;
                            margin: 0;
                            display: block;
                            width: 100%;
                            margin-bottom: 0.25em;
                            > *:last-child {
                                margin-bottom: 0;
                            }
                        }
                    }
                }
            }
            .nlhf-table__body {
                .nlhf-table__col-header {
                    flex: 0 0 140px;
                    width: 140px;
                    padding: 1em;
                    margin: -1em 1em -1em -1em;
                    font-weight: bold;
                }
            }  
        }      

        @include govuk-media-query($until: desktop) {
            // even if table headers are visually hidden, 
            // it's necessary to set row as block level to 
            // avoid weird bug on VoiceOver
            .nlhf-table__head {
                position: absolute !important;
                top: 0;
                left: 0;
                clip: rect(1px, 1px, 1px, 1px);
            }
        }


        @include govuk-media-query($from: desktop) {
            /* HIDE INVIDUAL CELL HEADING */
            .nlhf-table__body .nlhf-table__col-header {
                display: none;
            }
        }
        
    }
}

.nlhf-table__actions {
    list-style-type: none;
    margin: 0;
    padding: 0;
    &-item {
        display: block;
        margin: 0;
        &:not(:last-child) {
            margin-bottom: 0.5em;
        }
    }
    &-link {
        display: inline-block;
        padding: 0.2em 0;
        word-break: break-all;
    }
}

@include govuk-media-query($from: desktop) {
    .nlhf-table__cell,
    .nlhf-table__header {
        &:not(:first-child) {
            border-left: 2px dotted $govuk-border-colour;
        }
        border-color: $govuk-border-colour; // border fall back for older browser that which don't support rgba
        border-color: rgba($govuk-border-colour,0.7);
        padding: 0.5em;
    }
    // here I'm using Sass to generate what is known as a 'quantity query'
    // so that I can set widths of th, td's based on the number of them
    // that a present. This prevents the need for hard-coded classes
    // see: https://alistapart.com/article/quantity-queries-for-css/
    .nlhf-table {
        @for $i from 1 through 10 {
            $width: percentage(1 / $i);
            td {
                &:nth-last-child(n+#{$i}),
                &:nth-last-child(n+#{$i}) ~ td {
                    width: $width;
                }
            }
            th {
                &:nth-last-child(n+#{$i}),
                &:nth-last-child(n+#{$i}) ~ th {
                    width: $width;
                }
            }
        }
    }
}

.nlhf-table__cell {
    &__link {
        word-break: break-all;
    }
}