<%=
  render partial: "partials/page_title",
         locals: {
            model_object: @funding_application,
            page_title: t('progress_and_spend.progress_update.approved_purposes.page_title')
         }
%>

<%# Summary errors start %>
<% if @funding_application.arrears_journey_tracker.progress_update.errors.any? %>

  <div class="govuk-error-summary" aria-labelledby="error-summary-title"
      role="alert" tabindex="-1" data-module="govuk-error-summary">

    <h2 class="govuk-error-summary__title" id="error-summary-title">
      <%= t('generic.there_is_a_problem') %>
    </h2>

    <div class="govuk-error-summary__body">

      <ul class="govuk-list govuk-error-summary__list">

        <% @funding_application.arrears_journey_tracker.progress_update.errors.each do |error| %>

					<% if error.type == :blank %>

						<li>

              <a href=<%= @href_for_first_empty_text_field %> >
                <%= error.message %>
              </a>

						</li>

          <% elsif error.type == t("activerecord.errors.models.progress_update_approved_purpose." \
              "attributes.progress.too_long") %>

            <li>

              <a href=<%= @href_for_first_too_long_text_field %> >
                <%= error.message %>
              </a>

            </li>

					<% else %>
            <%# link to first checkbox.  Typically this is an error selecting wrong checkboxes%>

            <li>

              <a href='#progress_update_progress_update_approved_purpose_attributes_0_entering_update'>
                <%= error.message %>
              </a>

            </li>

					<% end %>

        <% end %>

      </ul>

    </div>

  </div>

<% end %>
<%# Summary errors end %>

<fieldset class="govuk-fieldset">
  <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">

		<span class="govuk-caption-xl govuk-!-padding-bottom-2">
			<%= t('progress_and_spend.progress_update.approved_purposes.page_caption')%>
		</span>

		<h1 class="govuk-heading-l">
			<%= t('progress_and_spend.progress_update.approved_purposes.page_heading')%>
		</h1>

	</legend>

  <%=
    form_with model: @funding_application.arrears_journey_tracker.progress_update,
    url: funding_application_progress_and_spend_progress_update_approved_purposes_path(),
    method: :post,
    local: true do |form|
  %>

    <div class="govuk-form-group <%= "govuk-form-group--error" if @funding_application.arrears_journey_tracker.progress_update.errors.any? %>">

      <p class="govuk-body govuk-hint govuk-!-padding-bottom-4">
        <%= t('progress_and_spend.progress_update.approved_purposes.page_hint') %>
      </p>

      <%# custom form group errors start.  Only needs to show error when check boxes selected incorrectly. %>
      <% pu = @funding_application.arrears_journey_tracker.progress_update %>

      <% pu.errors.each do |error| %>

        <% if error.type == 
          t("activerecord.errors.models.progress_update.attributes."\
            "progress_update_approved_purpose.checkbox_selection")%>

          <span id="<%= pu.class.name.downcase %>[<%= error.attribute %>]-error" class="govuk-error-message">
            <span class="govuk-visually-hidden">Error:</span> <%= error.message %>
          </span>

        <% end %>

      <% end %>
      <%# custom form group errors end %>

      <%=
        form.fields_for :progress_update_approved_purpose, @funding_application.arrears_journey_tracker.progress_update.progress_update_approved_purpose do |ap|
      %>

        <div class="govuk-checkboxes" data-module="govuk-checkboxes">

          <div class="govuk-checkboxes__item  govuk-!-margin-bottom-4">

            <%=
              ap.check_box :entering_update,
              {
                class: "govuk-checkboxes__input",
                "data-aria-controls" => "conditional-description-#{ap.object_name.parameterize.underscore}"
              },
              'true',
              'false'
            %>

            <%=
              ap.label :entering_update,
              ap.object.description,
              class: "govuk-label govuk-checkboxes__label"
            %>

          </div>

          <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden"
            id=<%="conditional-description-#{ap.object_name.parameterize.underscore}"%>>

            <%=
              render partial: "partials/form_input_errors",
                locals: {
                  form_object: ap.object,
                  input_field_id: :progress
                } if ap.object.errors.any?
            %>


            <div class="govuk-character-count" data-module="govuk-character-count"
              data-maxwords="300">

              <div class="govuk-form-group">
                <%=
                  ap.label :progress,
                  t('buttons.labels.update'),
                  class: "govuk-label govuk-!-padding-left-2"
                %>

                <%=
                  ap.text_area :progress,
                  rows: 5,
                  class: "govuk-textarea  #{'govuk-js-character-count' if I18n.locale == :"en-GB"} " \
                    "#{'govuk-input--error' if ap.object.errors.any?}",
                  'aria-describedby' => "#{ap.object_name.parameterize.underscore}_progress-info"
                %>

                <span id= <%="#{ap.object_name.parameterize.underscore}_progress-info"%>
                  class="govuk-hint govuk-character-count__message" aria-live="polite">
                  <%= t('generic.word_count', max_words:300) %>
                </span>

              </div>

            </div>

          </div>

        </div>

      <% end %>

      <div class="govuk-checkboxes" data-module="govuk-checkboxes">

        <div class="govuk-checkboxes__item  govuk-!-margin-bottom-4">

            <%=
              form.check_box :no_progress_update,
              {
                class: "govuk-checkboxes__input"
              },
              'true',
              'false'
            %>

            <%=
              form.label :no_progress_update,
              t('progress_and_spend.progress_update.approved_purposes.no_update_yet'),
              class: "govuk-label govuk-checkboxes__label"
            %>

        </div>

      </div>

    </div>

    <%= render(
        ButtonComponent.new(
          element: "button",
          text: t('buttons.labels.default')
        )
      )
    %>

  <% end %>

</fieldset>
